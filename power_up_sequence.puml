@startuml Power-Up_Frightened_Mode_Sequence

!theme aws-orange
skinparam backgroundColor #1E1E1E
skinparam sequenceParticipantBackgroundColor #2D2D30
skinparam sequenceParticipantBorderColor #007ACC
skinparam sequenceArrowColor #FFCC00
skinparam sequenceLifeLineBorderColor #569CD6

title Power-Up Frightened Mode - Sequence Diagram

actor Player
participant Game
participant PacMan
participant Map
participant "Ghostbase\n(All Ghosts)" as Ghosts

== Power-Up Collection ==
Player -> Game : Move PacMan to Power-Up
Game -> PacMan : update(map, deltaTime)
PacMan -> Map : hasPowerUp(nextX, nextY)
Map -> PacMan : true
PacMan -> Map : collectItem(x, y)
Map -> PacMan : 50 points
PacMan -> PacMan : powerUpEaten = true
PacMan -> Game : justAtePowerUp() returns true

== Frightened Mode Activation ==
Game -> Ghosts : setFrightened(true)
note right of Ghosts : All ghosts switch to\nFRIGHTENED state
Ghosts -> Ghosts : state = FRIGHTENED\nstateTimer = 10.0s
Game -> Game : ghostEatenCount = 0

== Frightened Mode Behavior ==
loop For each ghost update
    Game -> Ghosts : update(deltaTime, pacmanPos, map)
    alt Ghost is frightened
        Ghosts -> Ghosts : moveRandomly()
        note right of Ghosts : Slow, random movement\nShow only eyes (no body)
    end
end

== Ghost Collision During Frightened Mode ==
Game -> Game : ghostCollision()
alt Ghost can be eaten
    Game -> Ghosts : canBeEaten() returns true
    Game -> Ghosts : getEaten()
    note right of Ghosts : Instant teleport to spawn\nRestart in SCATTER mode
    Game -> PacMan : addScore(200 * 2^ghostEatenCount)
    note right of Game : Progressive scoring:\n200, 400, 800, 1600 points
    Game -> Game : ghostEatenCount++
else Ghost not frightened
    Game -> Game : state = GAMEOVER
    note right of Game : Normal ghost collision\ncauses game over
end

== Frightened Mode Timeout ==
note over Ghosts : After 10 seconds...
Ghosts -> Ghosts : stateTimer expires
Ghosts -> Ghosts : state = SCATTER
note right of Ghosts : Return to normal\nbehavior cycle

@enduml
